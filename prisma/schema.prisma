generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Page {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  content   String
  status    Status
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  url         String
  dimensions  String?
  createdAt   DateTime @default(now())
  alt         String?
  description String?
  mimeType    String
  tags        String?
  updatedAt   DateTime @updatedAt
  uploadedBy  Int?
  size        Int
  user        User?    @relation(fields: [uploadedBy], references: [id])
}

model TeamMember {
  id       Int    @id @default(autoincrement())
  name     String
  role     String
  bio      String
  imageUrl String
}

model Service {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  icon        String
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  media     Media[]
}

model Setting {
  id        Int      @id @default(autoincrement())
  key       String
  value     String   @db.Text
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([key, category])
}

model About {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  features    String[]
  buttonText  String   @default("Learn More")
  buttonUrl   String   @default("/about")
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Portfolio {
  id          Int      @id @default(autoincrement())
  title       String
  category    String
  description String
  imageUrl    String
  projectUrl  String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model SectionVisibility {
  id          Int      @id @default(autoincrement())
  sectionId   String   @unique
  isVisible   Boolean  @default(true)
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  Published
  Draft
}
